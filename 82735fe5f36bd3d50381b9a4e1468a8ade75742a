Revision: 82735fe5f36bd3d50381b9a4e1468a8ade75742a
Patch-set: 1
File: cache/simple_lru_cache_inl.h

59:6-59:17
Wed Feb 10 17:17:21 2016 +0000
Author: Wencheng Lu <5175@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
UUID: fd977c52_3585b231
Bytes: 25
where is this timer used?

59:6-59:17
Wed Feb 10 18:02:44 2016 +0000
Author: Wencheng Lu <5175@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: fd977c52_3585b231
UUID: 7dbb8cf2_01df70f6
Bytes: 64
never mind, text search in this this review UI doesn't work well

59:6-59:17
Wed Feb 10 18:15:48 2016 +0000
Author: Wayne Zhang <5025@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: 7dbb8cf2_01df70f6
UUID: 7dbb8cf2_6173ccb8
Bytes: 5
Acked

62:17-62:20
Wed Feb 10 18:02:44 2016 +0000
Author: Wencheng Lu <5175@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
UUID: 7dbb8cf2_4151e850
Bytes: 168
I think it is cleaner to simply define a helper method to get time instead of defining a class unless you want to make this extendable or pluggable for testing purpose.

62:17-62:20
Wed Feb 10 18:15:48 2016 +0000
Author: Wayne Zhang <5025@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: 7dbb8cf2_4151e850
UUID: 7dbb8cf2_c15bb82e
Bytes: 64
This class is just name space since its two functions are static

67:33-67:34
Wed Feb 10 20:14:31 2016 +0000
Author: Wencheng Lu <5175@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
UUID: 7dbb8cf2_4c78ff52
Bytes: 332
document that this unit is microsecond for now. I really like explicit name though. But this is not a big deal.


Also, defining this as a constant is much more common and efficient. Before you have the actual implementation of what you have in mind for future extension, I am not quite following why this should be a static method.

67:33-67:34
Thu Feb 11 01:44:22 2016 +0000
Author: Wencheng Lu <5175@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: 7dbb8cf2_4c78ff52
UUID: 3de034e0_41d994f6
Bytes: 69
you haven't responded to this comment yet. why not just use constant?

67:33-67:34
Thu Feb 11 02:34:09 2016 +0000
Author: Wayne Zhang <5025@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: 3de034e0_41d994f6
UUID: bd0fc4b0_50c30472
Bytes: 452
Sorry, I thought I have answered.  UnitsInSecond() is better than kMicroSecondInSecond.  It is related to Now() function.  In this implement, Now() returns Microsecond.  But in the future, we may change it to cpu cycle,  It is easier just change UnitsInSecond().  Otherwise we have to search kMicroSecondInSecond to replaced it back to UnitsInSecond().  Some kMicroSecondInSecond may be used for other purposes, you could not blindly just replace them.

67:33-67:34
Thu Feb 11 02:34:09 2016 +0000
Author: Wayne Zhang <5025@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: 7dbb8cf2_4c78ff52
UUID: bd0fc4b0_8abb8ba2
Bytes: 42
It is documented on the top of this class.

67:33-67:34
Thu Feb 11 05:00:28 2016 +0000
Author: Wencheng Lu <5175@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: bd0fc4b0_50c30472
UUID: bd0fc4b0_93d2a6d0
Bytes: 114
still not quite getting it. how about const int kUnitsInSecond? isn't const int more efficient than static method?

68:17-68:30
Wed Feb 10 17:17:21 2016 +0000
Author: Wencheng Lu <5175@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
UUID: fd977c52_d5962e72
Bytes: 14
unused method?

68:17-68:30
Wed Feb 10 18:15:48 2016 +0000
Author: Wayne Zhang <5025@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: fd977c52_d5962e72
UUID: 7dbb8cf2_4147a844
Bytes: 48
It is used.  problem with your editor or viewer.

873:17-873:59
Thu Feb 11 05:00:28 2016 +0000
Author: Wencheng Lu <5175@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
UUID: bd0fc4b0_3399ba33
Bytes: 782
I am a little worried about changing the units from cycles to microseconds now. Why not do an apple-to-apple copy? This whole file (method names, variable names, comments, default values) is based on cycles. It is quite confusing to use cycles for units (seconds) or the other way around when reading this code. Also I am afraid this change might break some assumption made by the original code.

You may take a look how many places you changed the value to units(seconds) while the variables/comments are still referring to cycles 

PS: I really don't like this review UI, have to switch to critique for keyword search

Here is the code to get clock cycles which is the fastest call as I know. The original code is using the same way:
google3/third_party/benchmark/src/cycleclock.h

946:22-946:35
Wed Feb 10 18:02:44 2016 +0000
Author: Wencheng Lu <5175@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
UUID: 7dbb8cf2_815ca055
Bytes: 111
UnitsInSeconds() -> const int SecToUsec
it seems much cleaner this way based on the way you used UnitsInSeconds

946:22-946:35
Wed Feb 10 18:15:48 2016 +0000
Author: Wayne Zhang <5025@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: 7dbb8cf2_815ca055
UUID: 7dbb8cf2_010e5017
Bytes: 210
SimpleTimer class can be extended to use cpu tick for some platform. It should be much faster. We don't implement it in the initial release, but we may in the future.
 For using cpu tick,  it is not a constant.

946:22-946:35
Wed Feb 10 18:37:04 2016 +0000
Author: Wencheng Lu <5175@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: 7dbb8cf2_010e5017
UUID: 7dbb8cf2_61ee2c18
Bytes: 381
are you trying to implement something like google3/base/timer.h: CycleTimerBase as used by the original code? You may end up using CyclesPerSecond instead of UnitsInSecond to be more explicit. 

Any way, I feel it is much readable in current code to simply use microseconds as unit here. And you can rename them with better meaning when you refactor this class for general purpose.

946:22-946:35
Wed Feb 10 19:05:45 2016 +0000
Author: Wayne Zhang <5025@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: 7dbb8cf2_61ee2c18
UUID: 7dbb8cf2_0c0c478d
Bytes: 249
The unit can be anything. if cpu cycle, it could be Cycle,  if using time_of_day(), it could be micro_seconds. 

I think calling it "UnitsInSecond" is more extendable.  In the future, we just replace the timer class, not need to rename the function.

946:22-946:35
Thu Feb 11 05:05:01 2016 +0000
Author: Wencheng Lu <5175@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: 7dbb8cf2_0c0c478d
UUID: bd0fc4b0_737612aa
Bytes: 224
this code doesn't seem right. The method name suggests returning microseconds, and SimpleTimer::Now() is already microseconds, I assume head_.prev->last_use_ is also microsconds, what does microsecs * 1000000 * 1000000 mean?

