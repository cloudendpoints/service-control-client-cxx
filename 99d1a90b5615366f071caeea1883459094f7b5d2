Revision: 99d1a90b5615366f071caeea1883459094f7b5d2
Patch-set: 4
File: src/service_control_client_impl.h

78:7-78:17
Fri Mar 25 17:13:10 2016 +0000
Author: Wencheng Lu <5175@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
UUID: 5c57aee9_75f7c078
Bytes: 323
I feel shared_ptr is not very readable and track. Do you know if there is any ref/uref class like this one: https://cs.corp.google.com/piper///depot/google3/util/refcount/reference_counted.h

I think we just need do ref/unref to manage pending flush callback, and all these shared_ptr here can be changed back to unique_ptr

78:7-78:17
Fri Mar 25 17:54:05 2016 +0000
Author: Wayne Zhang <5025@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: 5c57aee9_75f7c078
UUID: 5c57aee9_15691468
Bytes: 118
shared_ptr is ref_counted.   I don't understand why you want to manually implement shared_ptr with your own ref_count.

78:7-78:17
Fri Mar 25 18:13:53 2016 +0000
Author: Wayne Zhang <5025@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: 5c57aee9_15691468
UUID: 5c57aee9_75950063
Bytes: 248
Just read the google3 ref_count class.  If we want to protect client object, it will require users of the object to explicitly call Ref/Unref.  They could not simply call new Obj() and delete.   or use unique_ptr<Client>
I don't think we want that.

78:7-78:17
Fri Mar 25 18:22:54 2016 +0000
Author: Wencheng Lu <5175@3ccfd165-32a1-3a7c-ba90-d72e43bc4584>
Parent: 5c57aee9_75950063
UUID: 5c57aee9_f8f485a9
Bytes: 282
Ref/Unref in my mind is much cleaner than implicit reference counting. Also shared_ptr is an expensive op. see google doc on shared_ptr discussion.

Anyway, could you check if there is refcount class available in opensource, if not, we can revisit this after more performance study.

